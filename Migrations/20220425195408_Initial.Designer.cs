// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheSpartanVideoClub.Data.Enums;

namespace TheSpartanVideoClub.Migrations
{
    [DbContext(typeof(ContextoAppBd))]
    [Migration("20220425195408_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TheSpartanVideoClub.Models.Actor", b =>
                {
                    b.Property<int>("IdActor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FotoPerfilActor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreActor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdActor");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("TheSpartanVideoClub.Models.Actor_Pelicula", b =>
                {
                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<int>("PeliculaId")
                        .HasColumnType("int");

                    b.HasKey("ActorId", "PeliculaId");

                    b.HasIndex("PeliculaId");

                    b.ToTable("Actor_Peliculas");
                });

            modelBuilder.Entity("TheSpartanVideoClub.Models.Director", b =>
                {
                    b.Property<int>("IdDirector")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FotoPerfilDirector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDirector")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDirector");

                    b.ToTable("Directors");
                });

            modelBuilder.Entity("TheSpartanVideoClub.Models.Pelicula", b =>
                {
                    b.Property<int>("IdPelicula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoriaPelicula")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionPelicula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DirectorId")
                        .HasColumnType("int");

                    b.Property<string>("DirectorPelicula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElencoPelicula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotoPerfilPelicula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePelicula")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPelicula");

                    b.HasIndex("DirectorId");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("TheSpartanVideoClub.Models.Actor_Pelicula", b =>
                {
                    b.HasOne("TheSpartanVideoClub.Models.Actor", "Actor")
                        .WithMany("actor_Peliculas")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheSpartanVideoClub.Models.Pelicula", "Pelicula")
                        .WithMany("actor_Peliculas")
                        .HasForeignKey("PeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Pelicula");
                });

            modelBuilder.Entity("TheSpartanVideoClub.Models.Pelicula", b =>
                {
                    b.HasOne("TheSpartanVideoClub.Models.Director", "Director")
                        .WithMany("peliculas")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");
                });

            modelBuilder.Entity("TheSpartanVideoClub.Models.Actor", b =>
                {
                    b.Navigation("actor_Peliculas");
                });

            modelBuilder.Entity("TheSpartanVideoClub.Models.Director", b =>
                {
                    b.Navigation("peliculas");
                });

            modelBuilder.Entity("TheSpartanVideoClub.Models.Pelicula", b =>
                {
                    b.Navigation("actor_Peliculas");
                });
#pragma warning restore 612, 618
        }
    }
}
